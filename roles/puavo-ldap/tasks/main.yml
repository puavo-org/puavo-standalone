- name: Install slapd-restore helper
  copy:
    src: slaprestore
    dest: /usr/local/bin/slaprestore
    mode: a+x

- name: Install latest puavo-standalone, puavo-web and puavo-rest
  apt:
    pkg:
      - puavo-standalone
      - puavo-web
      - puavo-rest
    state: latest
    force: yes

- name: Install redis for puavo-web & puavo-rest
  apt: pkg=redis-server state=present

  # puavo-init-standalone is installed by the puavo-standalone package, but there is also
  # a copy of the script in the repo directory. This is by design.
- name: Initialize LDAP
  command: puavo-init-standalone --unsafe-passwords puavo.net creates=/etc/puavo

- name: Create organisations for test and development
  command: puavo-add-new-organisation --yes {{ item.organisation }} --username {{ item.username }} --password {{ item.password }} --given-name {{ item.givenname }} --surname {{ item.surname }}
    creates={{ item.creates }}
  notify: Seed LDAP database
  with_items:
    - { organisation: "hogwarts",
        username: "albus",
        password: "albus",
        givenname: "Albus",
        surname: "Dumbledore",
        creates: "/var/lib/ldap/dc=edu,dc=hogwarts,dc=net" }
    - { organisation: "example",
        username: "cucumber",
        password: "cucumber",
        givenname: "cucumber",
        surname: "cucumber",
        creates: "/var/lib/ldap/dc=edu,dc=example,dc=net" }
    - { organisation: "anotherorg",
        username: "admin",
        password: "admin",
        givenname: "Admin",
        surname: "Administrator",
        creates: "/var/lib/ldap/dc=edu,dc=anotherorg,dc=net" }
    - { organisation: "heroes",
        username: "admin",
        password: "admin",
        givenname: "Charles",
        surname: "Xavier",
        creates: "/var/lib/ldap/dc=edu,dc=heroes,dc=net" }
    - { organisation: "external",
        username: "cucumber",
        password: "cucumber",
        givenname: "cucumber",
        surname: "cucumber",
        creates: "/var/lib/ldap/dc=edu,dc=external,dc=net" }

- name: Install call-until-ok
  copy:
    dest: /usr/local/bin/call-until-ok
    mode: a+x
    content: |
      #!/bin/sh
      for i in $(seq 60); do
          >/dev/null "$@" &&  exit 0
          sleep 1
      done
      exit 1

- name: Refresh organisations for puavo-rest
  service: name=puavo-rest state=restarted

- name: Wait for puavo-rest to wake up
  command: 'call-until-ok curl --noproxy localhost --fail -H "host: hogwarts.puavo.net" http://localhost:9292/v3/ldap_connection_test'

- name: Get hostname
  command: hostname -f
  register: hostname_command

- name: Configuration for puavo-rest
  copy:
    src=puavo-rest.yml
    dest=/etc/puavo-rest.yml
  notify: Restart puavo-rest

- name: Ensure /etc/puavo-web exists
  file:
    dest=/etc/puavo-web
    state=directory

- name: Add ldap configuration for puavo-web
  template:
    src=etc/puavo-web/ldap.yml
    dest=/etc/puavo-web/ldap.yml
  notify: Restart puavo-web

- name: Add organisations.yml for puavo-web
  template:
    src=etc/puavo-web/organisations.yml
    dest=/etc/puavo-web/organisations.yml
  notify: Restart puavo-web

- name: Add puavo_web.yml for puavo-web
  copy:
    src=etc/puavo-web/puavo_web.yml
    dest=/etc/puavo-web/puavo_web.yml
  notify: Restart puavo-web

- name: Add puavo_external_files.yml for puavo-web
  copy:
    src=etc/puavo-web/puavo_external_files.yml
    dest=/etc/puavo-web/puavo_external_files.yml
  notify: Restart puavo-web

- name: Add secrets.yml for puavo-web
  copy:
    src=etc/puavo-web/secrets.yml
    dest=/etc/puavo-web/secrets.yml
  notify: Restart puavo-web

- name: Add redis.yml for puavo-web
  copy:
    src=etc/puavo-web/redis.yml
    dest=/etc/puavo-web/redis.yml
  notify: Restart puavo-web

- name: Add unicorn.rb for puavo-web
  copy:
    src=etc/puavo-web/unicorn.rb
    dest=/etc/puavo-web/unicorn.rb
  notify: Restart puavo-web

- name: Ensure /etc/puavo-rest.d exists
  file:
    path="/etc/puavo-rest.d"
    state=directory

- name: Copy the OAuth2 example private and public key files
  copy:
    src="etc/puavo-rest.d/{{item}}"
    dest="/etc/puavo-rest.d/{{item}}"
  with_items:
    - "oauth2_token_signing_private_key_example.pem"
    - "oauth2_token_signing_public_key_example.pem"

- name: Create the OAuth2 clients database
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "oauth2"
    state: present

- name: Create the puavo-standalone user for the OAuth2 clients database
  become: true
  become_user: postgres
  postgresql_user:
    db: "oauth2"
    name: "standalone_user"
    password: "standalone_password"
    state: present

- name: Create the OAuth2 login clients table
  become: true
  become_user: postgres
  community.postgresql.postgresql_table:
    db: "oauth2"
    name: "login_clients"
    columns:
      - client_id TEXT UNIQUE NOT NULL PRIMARY KEY
      - enabled BOOLEAN NOT NULL DEFAULT FALSE
      - puavo_service_dn TEXT NOT NULL
      - allowed_redirects TEXT[] NOT NULL
      - allowed_scopes TEXT[] NOT NULL
      - created TIMESTAMP NOT NULL
      - modified TIMESTAMP NOT NULL

- name: Create the OAuth2 access token clients table
  become: true
  become_user: postgres
  community.postgresql.postgresql_table:
    db: "oauth2"
    name: "token_clients"
    columns:
      - client_id TEXT UNIQUE NOT NULL PRIMARY KEY
      - client_password TEXT NOT NULL
      - enabled BOOLEAN NOT NULL DEFAULT FALSE
      - expires_in INTEGER NOT NULL DEFAULT 3600
      - allowed_scopes TEXT[] NOT NULL
      - allowed_endpoints TEXT[]
      - allowed_organisations TEXT[]
      - created TIMESTAMP NOT NULL
      - modified TIMESTAMP NOT NULL
      - password_changed TIMESTAMP NOT NULL

- name: Grant tables access to standalone_user
  # Remember that puavo-standalone is not used in production, and in
  # production the user has very limited privileges.
  become: true
  become_user: postgres
  postgresql_privs:
    db: "oauth2"
    roles: "standalone_user"
    type: table
    privs: SELECT,INSERT,UPDATE,DELETE
    objs: login_clients,token_clients

- name: Tell systemd to start the puavo services at boot
  command: systemctl enable "{{ item }}.service"
  with_items:
    - puavo-web
    - puavo-rest
    - puavo-ca-rails
